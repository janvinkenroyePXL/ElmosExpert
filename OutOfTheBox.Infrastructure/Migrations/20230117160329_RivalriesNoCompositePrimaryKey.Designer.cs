// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OutOfTheBox.Infrastructure;

#nullable disable

namespace OutOfTheBox.Infrastructure.Migrations
{
    [DbContext(typeof(OutOfTheBoxContext))]
    [Migration("20230117160329_RivalriesNoCompositePrimaryKey")]
    partial class RivalriesNoCompositePrimaryKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OutOfTheBox.Domain.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsIsolationCell")
                        .HasColumnType("bit");

                    b.Property<int>("PrisonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrisonId");

                    b.ToTable("cells", (string)null);
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Prison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("prisons", (string)null);
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Prisoner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CellId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.ToTable("prisoners", (string)null);
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Rivalry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PrisonerId")
                        .HasColumnType("int");

                    b.Property<int>("RivalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrisonerId");

                    b.HasIndex("RivalId");

                    b.ToTable("rivalries", (string)null);
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Sentence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndOfSentence")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLifeSentence")
                        .HasColumnType("bit");

                    b.Property<int>("PrisonerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartOfSentence")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PrisonerId")
                        .IsUnique();

                    b.ToTable("sentences", (string)null);
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Cell", b =>
                {
                    b.HasOne("OutOfTheBox.Domain.Prison", "Prison")
                        .WithMany("Cells")
                        .HasForeignKey("PrisonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prison");
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Prisoner", b =>
                {
                    b.HasOne("OutOfTheBox.Domain.Cell", "Cell")
                        .WithMany("Prisoners")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cell");
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Rivalry", b =>
                {
                    b.HasOne("OutOfTheBox.Domain.Prisoner", "Prisoner")
                        .WithMany("ActiveRivalries")
                        .HasForeignKey("PrisonerId")
                        .IsRequired();

                    b.HasOne("OutOfTheBox.Domain.Prisoner", "Rival")
                        .WithMany("PassiveRivalries")
                        .HasForeignKey("RivalId")
                        .IsRequired();

                    b.Navigation("Prisoner");

                    b.Navigation("Rival");
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Sentence", b =>
                {
                    b.HasOne("OutOfTheBox.Domain.Prisoner", "Prisoner")
                        .WithOne("Sentence")
                        .HasForeignKey("OutOfTheBox.Domain.Sentence", "PrisonerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Prisoner");
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Cell", b =>
                {
                    b.Navigation("Prisoners");
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Prison", b =>
                {
                    b.Navigation("Cells");
                });

            modelBuilder.Entity("OutOfTheBox.Domain.Prisoner", b =>
                {
                    b.Navigation("ActiveRivalries");

                    b.Navigation("PassiveRivalries");

                    b.Navigation("Sentence");
                });
#pragma warning restore 612, 618
        }
    }
}
